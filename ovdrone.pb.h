// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ovdrone.proto

#ifndef PROTOBUF_ovdrone_2eproto__INCLUDED
#define PROTOBUF_ovdrone_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ovdrone {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ovdrone_2eproto();
void protobuf_AssignDesc_ovdrone_2eproto();
void protobuf_ShutdownFile_ovdrone_2eproto();

class Ping;

enum MessageTypes {
  UNKNOWN = 0,
  PING = 1
};
bool MessageTypes_IsValid(int value);
const MessageTypes MessageTypes_MIN = UNKNOWN;
const MessageTypes MessageTypes_MAX = PING;
const int MessageTypes_ARRAYSIZE = MessageTypes_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageTypes_descriptor();
inline const ::std::string& MessageTypes_Name(MessageTypes value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageTypes_descriptor(), value);
}
inline bool MessageTypes_Parse(
    const ::std::string& name, MessageTypes* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageTypes>(
    MessageTypes_descriptor(), name, value);
}
// ===================================================================

class Ping : public ::google::protobuf::Message {
 public:
  Ping();
  virtual ~Ping();

  Ping(const Ping& from);

  inline Ping& operator=(const Ping& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ping& default_instance();

  void Swap(Ping* other);

  // implements Message ----------------------------------------------

  Ping* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ping& from);
  void MergeFrom(const Ping& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 request_timestamp = 1;
  inline bool has_request_timestamp() const;
  inline void clear_request_timestamp();
  static const int kRequestTimestampFieldNumber = 1;
  inline ::google::protobuf::uint64 request_timestamp() const;
  inline void set_request_timestamp(::google::protobuf::uint64 value);

  // optional uint64 response_timestamp = 2;
  inline bool has_response_timestamp() const;
  inline void clear_response_timestamp();
  static const int kResponseTimestampFieldNumber = 2;
  inline ::google::protobuf::uint64 response_timestamp() const;
  inline void set_response_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ovdrone.proto.Ping)
 private:
  inline void set_has_request_timestamp();
  inline void clear_has_request_timestamp();
  inline void set_has_response_timestamp();
  inline void clear_has_response_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 request_timestamp_;
  ::google::protobuf::uint64 response_timestamp_;
  friend void  protobuf_AddDesc_ovdrone_2eproto();
  friend void protobuf_AssignDesc_ovdrone_2eproto();
  friend void protobuf_ShutdownFile_ovdrone_2eproto();

  void InitAsDefaultInstance();
  static Ping* default_instance_;
};
// ===================================================================


// ===================================================================

// Ping

// required uint64 request_timestamp = 1;
inline bool Ping::has_request_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ping::set_has_request_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ping::clear_has_request_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ping::clear_request_timestamp() {
  request_timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_request_timestamp();
}
inline ::google::protobuf::uint64 Ping::request_timestamp() const {
  // @@protoc_insertion_point(field_get:ovdrone.proto.Ping.request_timestamp)
  return request_timestamp_;
}
inline void Ping::set_request_timestamp(::google::protobuf::uint64 value) {
  set_has_request_timestamp();
  request_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ovdrone.proto.Ping.request_timestamp)
}

// optional uint64 response_timestamp = 2;
inline bool Ping::has_response_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ping::set_has_response_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ping::clear_has_response_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ping::clear_response_timestamp() {
  response_timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_response_timestamp();
}
inline ::google::protobuf::uint64 Ping::response_timestamp() const {
  // @@protoc_insertion_point(field_get:ovdrone.proto.Ping.response_timestamp)
  return response_timestamp_;
}
inline void Ping::set_response_timestamp(::google::protobuf::uint64 value) {
  set_has_response_timestamp();
  response_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ovdrone.proto.Ping.response_timestamp)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace ovdrone

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ovdrone::proto::MessageTypes> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ovdrone::proto::MessageTypes>() {
  return ::ovdrone::proto::MessageTypes_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ovdrone_2eproto__INCLUDED
