// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ovdrone.proto

#ifndef PROTOBUF_ovdrone_2eproto__INCLUDED
#define PROTOBUF_ovdrone_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ovdrone {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ovdrone_2eproto();
void protobuf_AssignDesc_ovdrone_2eproto();
void protobuf_ShutdownFile_ovdrone_2eproto();

class Ping;
class MotorUpdate;
class NetworkStatus;
class VideoSettings;

enum MessageTypes {
  UNKNOWN = 0,
  PING = 1,
  MOTOR_UPDATE = 2,
  NETWORK_STATUS = 3,
  VIDEO_SETTINGS = 4
};
bool MessageTypes_IsValid(int value);
const MessageTypes MessageTypes_MIN = UNKNOWN;
const MessageTypes MessageTypes_MAX = VIDEO_SETTINGS;
const int MessageTypes_ARRAYSIZE = MessageTypes_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageTypes_descriptor();
inline const ::std::string& MessageTypes_Name(MessageTypes value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageTypes_descriptor(), value);
}
inline bool MessageTypes_Parse(
    const ::std::string& name, MessageTypes* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageTypes>(
    MessageTypes_descriptor(), name, value);
}
// ===================================================================

class Ping : public ::google::protobuf::Message {
 public:
  Ping();
  virtual ~Ping();

  Ping(const Ping& from);

  inline Ping& operator=(const Ping& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ping& default_instance();

  void Swap(Ping* other);

  // implements Message ----------------------------------------------

  Ping* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ping& from);
  void MergeFrom(const Ping& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 request_timestamp = 1;
  inline bool has_request_timestamp() const;
  inline void clear_request_timestamp();
  static const int kRequestTimestampFieldNumber = 1;
  inline ::google::protobuf::uint64 request_timestamp() const;
  inline void set_request_timestamp(::google::protobuf::uint64 value);

  // optional uint64 response_timestamp = 2;
  inline bool has_response_timestamp() const;
  inline void clear_response_timestamp();
  static const int kResponseTimestampFieldNumber = 2;
  inline ::google::protobuf::uint64 response_timestamp() const;
  inline void set_response_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ovdrone.proto.Ping)
 private:
  inline void set_has_request_timestamp();
  inline void clear_has_request_timestamp();
  inline void set_has_response_timestamp();
  inline void clear_has_response_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 request_timestamp_;
  ::google::protobuf::uint64 response_timestamp_;
  friend void  protobuf_AddDesc_ovdrone_2eproto();
  friend void protobuf_AssignDesc_ovdrone_2eproto();
  friend void protobuf_ShutdownFile_ovdrone_2eproto();

  void InitAsDefaultInstance();
  static Ping* default_instance_;
};
// -------------------------------------------------------------------

class MotorUpdate : public ::google::protobuf::Message {
 public:
  MotorUpdate();
  virtual ~MotorUpdate();

  MotorUpdate(const MotorUpdate& from);

  inline MotorUpdate& operator=(const MotorUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MotorUpdate& default_instance();

  void Swap(MotorUpdate* other);

  // implements Message ----------------------------------------------

  MotorUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MotorUpdate& from);
  void MergeFrom(const MotorUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float left = 1;
  inline bool has_left() const;
  inline void clear_left();
  static const int kLeftFieldNumber = 1;
  inline float left() const;
  inline void set_left(float value);

  // required float right = 2;
  inline bool has_right() const;
  inline void clear_right();
  static const int kRightFieldNumber = 2;
  inline float right() const;
  inline void set_right(float value);

  // @@protoc_insertion_point(class_scope:ovdrone.proto.MotorUpdate)
 private:
  inline void set_has_left();
  inline void clear_has_left();
  inline void set_has_right();
  inline void clear_has_right();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float left_;
  float right_;
  friend void  protobuf_AddDesc_ovdrone_2eproto();
  friend void protobuf_AssignDesc_ovdrone_2eproto();
  friend void protobuf_ShutdownFile_ovdrone_2eproto();

  void InitAsDefaultInstance();
  static MotorUpdate* default_instance_;
};
// -------------------------------------------------------------------

class NetworkStatus : public ::google::protobuf::Message {
 public:
  NetworkStatus();
  virtual ~NetworkStatus();

  NetworkStatus(const NetworkStatus& from);

  inline NetworkStatus& operator=(const NetworkStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetworkStatus& default_instance();

  void Swap(NetworkStatus* other);

  // implements Message ----------------------------------------------

  NetworkStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetworkStatus& from);
  void MergeFrom(const NetworkStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string access_point = 1;
  inline bool has_access_point() const;
  inline void clear_access_point();
  static const int kAccessPointFieldNumber = 1;
  inline const ::std::string& access_point() const;
  inline void set_access_point(const ::std::string& value);
  inline void set_access_point(const char* value);
  inline void set_access_point(const char* value, size_t size);
  inline ::std::string* mutable_access_point();
  inline ::std::string* release_access_point();
  inline void set_allocated_access_point(::std::string* access_point);

  // required sint32 signal_level = 2;
  inline bool has_signal_level() const;
  inline void clear_signal_level();
  static const int kSignalLevelFieldNumber = 2;
  inline ::google::protobuf::int32 signal_level() const;
  inline void set_signal_level(::google::protobuf::int32 value);

  // required int32 link_quality_val = 3;
  inline bool has_link_quality_val() const;
  inline void clear_link_quality_val();
  static const int kLinkQualityValFieldNumber = 3;
  inline ::google::protobuf::int32 link_quality_val() const;
  inline void set_link_quality_val(::google::protobuf::int32 value);

  // required int32 link_quality_max = 4;
  inline bool has_link_quality_max() const;
  inline void clear_link_quality_max();
  static const int kLinkQualityMaxFieldNumber = 4;
  inline ::google::protobuf::int32 link_quality_max() const;
  inline void set_link_quality_max(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ovdrone.proto.NetworkStatus)
 private:
  inline void set_has_access_point();
  inline void clear_has_access_point();
  inline void set_has_signal_level();
  inline void clear_has_signal_level();
  inline void set_has_link_quality_val();
  inline void clear_has_link_quality_val();
  inline void set_has_link_quality_max();
  inline void clear_has_link_quality_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* access_point_;
  ::google::protobuf::int32 signal_level_;
  ::google::protobuf::int32 link_quality_val_;
  ::google::protobuf::int32 link_quality_max_;
  friend void  protobuf_AddDesc_ovdrone_2eproto();
  friend void protobuf_AssignDesc_ovdrone_2eproto();
  friend void protobuf_ShutdownFile_ovdrone_2eproto();

  void InitAsDefaultInstance();
  static NetworkStatus* default_instance_;
};
// -------------------------------------------------------------------

class VideoSettings : public ::google::protobuf::Message {
 public:
  VideoSettings();
  virtual ~VideoSettings();

  VideoSettings(const VideoSettings& from);

  inline VideoSettings& operator=(const VideoSettings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoSettings& default_instance();

  void Swap(VideoSettings* other);

  // implements Message ----------------------------------------------

  VideoSettings* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VideoSettings& from);
  void MergeFrom(const VideoSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 jpeg_quality = 1;
  inline bool has_jpeg_quality() const;
  inline void clear_jpeg_quality();
  static const int kJpegQualityFieldNumber = 1;
  inline ::google::protobuf::int32 jpeg_quality() const;
  inline void set_jpeg_quality(::google::protobuf::int32 value);

  // required int32 frame_delay = 2;
  inline bool has_frame_delay() const;
  inline void clear_frame_delay();
  static const int kFrameDelayFieldNumber = 2;
  inline ::google::protobuf::int32 frame_delay() const;
  inline void set_frame_delay(::google::protobuf::int32 value);

  // required bool grayscale = 3;
  inline bool has_grayscale() const;
  inline void clear_grayscale();
  static const int kGrayscaleFieldNumber = 3;
  inline bool grayscale() const;
  inline void set_grayscale(bool value);

  // @@protoc_insertion_point(class_scope:ovdrone.proto.VideoSettings)
 private:
  inline void set_has_jpeg_quality();
  inline void clear_has_jpeg_quality();
  inline void set_has_frame_delay();
  inline void clear_has_frame_delay();
  inline void set_has_grayscale();
  inline void clear_has_grayscale();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 jpeg_quality_;
  ::google::protobuf::int32 frame_delay_;
  bool grayscale_;
  friend void  protobuf_AddDesc_ovdrone_2eproto();
  friend void protobuf_AssignDesc_ovdrone_2eproto();
  friend void protobuf_ShutdownFile_ovdrone_2eproto();

  void InitAsDefaultInstance();
  static VideoSettings* default_instance_;
};
// ===================================================================


// ===================================================================

// Ping

// required uint64 request_timestamp = 1;
inline bool Ping::has_request_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ping::set_has_request_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ping::clear_has_request_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ping::clear_request_timestamp() {
  request_timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_request_timestamp();
}
inline ::google::protobuf::uint64 Ping::request_timestamp() const {
  // @@protoc_insertion_point(field_get:ovdrone.proto.Ping.request_timestamp)
  return request_timestamp_;
}
inline void Ping::set_request_timestamp(::google::protobuf::uint64 value) {
  set_has_request_timestamp();
  request_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ovdrone.proto.Ping.request_timestamp)
}

// optional uint64 response_timestamp = 2;
inline bool Ping::has_response_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ping::set_has_response_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ping::clear_has_response_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ping::clear_response_timestamp() {
  response_timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_response_timestamp();
}
inline ::google::protobuf::uint64 Ping::response_timestamp() const {
  // @@protoc_insertion_point(field_get:ovdrone.proto.Ping.response_timestamp)
  return response_timestamp_;
}
inline void Ping::set_response_timestamp(::google::protobuf::uint64 value) {
  set_has_response_timestamp();
  response_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ovdrone.proto.Ping.response_timestamp)
}

// -------------------------------------------------------------------

// MotorUpdate

// required float left = 1;
inline bool MotorUpdate::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MotorUpdate::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MotorUpdate::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MotorUpdate::clear_left() {
  left_ = 0;
  clear_has_left();
}
inline float MotorUpdate::left() const {
  // @@protoc_insertion_point(field_get:ovdrone.proto.MotorUpdate.left)
  return left_;
}
inline void MotorUpdate::set_left(float value) {
  set_has_left();
  left_ = value;
  // @@protoc_insertion_point(field_set:ovdrone.proto.MotorUpdate.left)
}

// required float right = 2;
inline bool MotorUpdate::has_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MotorUpdate::set_has_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MotorUpdate::clear_has_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MotorUpdate::clear_right() {
  right_ = 0;
  clear_has_right();
}
inline float MotorUpdate::right() const {
  // @@protoc_insertion_point(field_get:ovdrone.proto.MotorUpdate.right)
  return right_;
}
inline void MotorUpdate::set_right(float value) {
  set_has_right();
  right_ = value;
  // @@protoc_insertion_point(field_set:ovdrone.proto.MotorUpdate.right)
}

// -------------------------------------------------------------------

// NetworkStatus

// required string access_point = 1;
inline bool NetworkStatus::has_access_point() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkStatus::set_has_access_point() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetworkStatus::clear_has_access_point() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetworkStatus::clear_access_point() {
  if (access_point_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_point_->clear();
  }
  clear_has_access_point();
}
inline const ::std::string& NetworkStatus::access_point() const {
  // @@protoc_insertion_point(field_get:ovdrone.proto.NetworkStatus.access_point)
  return *access_point_;
}
inline void NetworkStatus::set_access_point(const ::std::string& value) {
  set_has_access_point();
  if (access_point_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_point_ = new ::std::string;
  }
  access_point_->assign(value);
  // @@protoc_insertion_point(field_set:ovdrone.proto.NetworkStatus.access_point)
}
inline void NetworkStatus::set_access_point(const char* value) {
  set_has_access_point();
  if (access_point_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_point_ = new ::std::string;
  }
  access_point_->assign(value);
  // @@protoc_insertion_point(field_set_char:ovdrone.proto.NetworkStatus.access_point)
}
inline void NetworkStatus::set_access_point(const char* value, size_t size) {
  set_has_access_point();
  if (access_point_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_point_ = new ::std::string;
  }
  access_point_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ovdrone.proto.NetworkStatus.access_point)
}
inline ::std::string* NetworkStatus::mutable_access_point() {
  set_has_access_point();
  if (access_point_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_point_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ovdrone.proto.NetworkStatus.access_point)
  return access_point_;
}
inline ::std::string* NetworkStatus::release_access_point() {
  clear_has_access_point();
  if (access_point_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = access_point_;
    access_point_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NetworkStatus::set_allocated_access_point(::std::string* access_point) {
  if (access_point_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete access_point_;
  }
  if (access_point) {
    set_has_access_point();
    access_point_ = access_point;
  } else {
    clear_has_access_point();
    access_point_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ovdrone.proto.NetworkStatus.access_point)
}

// required sint32 signal_level = 2;
inline bool NetworkStatus::has_signal_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetworkStatus::set_has_signal_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetworkStatus::clear_has_signal_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetworkStatus::clear_signal_level() {
  signal_level_ = 0;
  clear_has_signal_level();
}
inline ::google::protobuf::int32 NetworkStatus::signal_level() const {
  // @@protoc_insertion_point(field_get:ovdrone.proto.NetworkStatus.signal_level)
  return signal_level_;
}
inline void NetworkStatus::set_signal_level(::google::protobuf::int32 value) {
  set_has_signal_level();
  signal_level_ = value;
  // @@protoc_insertion_point(field_set:ovdrone.proto.NetworkStatus.signal_level)
}

// required int32 link_quality_val = 3;
inline bool NetworkStatus::has_link_quality_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NetworkStatus::set_has_link_quality_val() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NetworkStatus::clear_has_link_quality_val() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NetworkStatus::clear_link_quality_val() {
  link_quality_val_ = 0;
  clear_has_link_quality_val();
}
inline ::google::protobuf::int32 NetworkStatus::link_quality_val() const {
  // @@protoc_insertion_point(field_get:ovdrone.proto.NetworkStatus.link_quality_val)
  return link_quality_val_;
}
inline void NetworkStatus::set_link_quality_val(::google::protobuf::int32 value) {
  set_has_link_quality_val();
  link_quality_val_ = value;
  // @@protoc_insertion_point(field_set:ovdrone.proto.NetworkStatus.link_quality_val)
}

// required int32 link_quality_max = 4;
inline bool NetworkStatus::has_link_quality_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NetworkStatus::set_has_link_quality_max() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NetworkStatus::clear_has_link_quality_max() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NetworkStatus::clear_link_quality_max() {
  link_quality_max_ = 0;
  clear_has_link_quality_max();
}
inline ::google::protobuf::int32 NetworkStatus::link_quality_max() const {
  // @@protoc_insertion_point(field_get:ovdrone.proto.NetworkStatus.link_quality_max)
  return link_quality_max_;
}
inline void NetworkStatus::set_link_quality_max(::google::protobuf::int32 value) {
  set_has_link_quality_max();
  link_quality_max_ = value;
  // @@protoc_insertion_point(field_set:ovdrone.proto.NetworkStatus.link_quality_max)
}

// -------------------------------------------------------------------

// VideoSettings

// required int32 jpeg_quality = 1;
inline bool VideoSettings::has_jpeg_quality() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VideoSettings::set_has_jpeg_quality() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VideoSettings::clear_has_jpeg_quality() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VideoSettings::clear_jpeg_quality() {
  jpeg_quality_ = 0;
  clear_has_jpeg_quality();
}
inline ::google::protobuf::int32 VideoSettings::jpeg_quality() const {
  // @@protoc_insertion_point(field_get:ovdrone.proto.VideoSettings.jpeg_quality)
  return jpeg_quality_;
}
inline void VideoSettings::set_jpeg_quality(::google::protobuf::int32 value) {
  set_has_jpeg_quality();
  jpeg_quality_ = value;
  // @@protoc_insertion_point(field_set:ovdrone.proto.VideoSettings.jpeg_quality)
}

// required int32 frame_delay = 2;
inline bool VideoSettings::has_frame_delay() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VideoSettings::set_has_frame_delay() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VideoSettings::clear_has_frame_delay() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VideoSettings::clear_frame_delay() {
  frame_delay_ = 0;
  clear_has_frame_delay();
}
inline ::google::protobuf::int32 VideoSettings::frame_delay() const {
  // @@protoc_insertion_point(field_get:ovdrone.proto.VideoSettings.frame_delay)
  return frame_delay_;
}
inline void VideoSettings::set_frame_delay(::google::protobuf::int32 value) {
  set_has_frame_delay();
  frame_delay_ = value;
  // @@protoc_insertion_point(field_set:ovdrone.proto.VideoSettings.frame_delay)
}

// required bool grayscale = 3;
inline bool VideoSettings::has_grayscale() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VideoSettings::set_has_grayscale() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VideoSettings::clear_has_grayscale() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VideoSettings::clear_grayscale() {
  grayscale_ = false;
  clear_has_grayscale();
}
inline bool VideoSettings::grayscale() const {
  // @@protoc_insertion_point(field_get:ovdrone.proto.VideoSettings.grayscale)
  return grayscale_;
}
inline void VideoSettings::set_grayscale(bool value) {
  set_has_grayscale();
  grayscale_ = value;
  // @@protoc_insertion_point(field_set:ovdrone.proto.VideoSettings.grayscale)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace ovdrone

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ovdrone::proto::MessageTypes> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ovdrone::proto::MessageTypes>() {
  return ::ovdrone::proto::MessageTypes_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ovdrone_2eproto__INCLUDED
